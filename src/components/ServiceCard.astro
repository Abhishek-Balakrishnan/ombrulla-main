---
interface Props {
    index: number;
    title: string;
    subTitle: string;
    imgUrl:string;
    features: Feature[];
}

interface Feature {
    feature: string;
    details: string;
}

const { index, title, subTitle, features,imgUrl } = Astro.props;
const alignment = index % 2 ? `md:flex-row-reverse` : `md:flex-row`;
const firstImageMargin = index % 2 ? `-ml-10 mt-10` : `-mr-5 mt-10`;
// const secondImageMargin = index % 2 ? `-ml-96` : `-ml-64`;
---

<div
    class=`relative flex flex-col ${alignment} h-screen justify-around px-[6vw]`
>
    <div class="basis-1/2 flex flex-col pt-[10vh] gap-y-5">
        <h3 class="font-bold font-sans text-sm">
            {subTitle}
        </h3>
        <h2 class="text-4xl font-medium leading-tight">
            {title}
        </h2>
        <ul class="list-disc text-slate-400 ml-4">
            {
                features.map((d) => (
                    <li>
                        <span class="font-medium text-black">{d.feature}</span>:{" "}
                        {d.details}
                    </li>
                ))
            }
        </ul>
        <button
            class="bg-primary hover:bg-transparent text-white font-sans font-semibold hover:text-primary py-2 px-4 border border-primary hover:border-secoondary rounded w-40"
        >
            Schedule Call
        </button>
    </div>
    <div class="basis-1/2 flex items-center justify-center ">
        <img
            src={imgUrl}
            alt=""
            class=`absolute z-10 ${firstImageMargin} h-[70vh] w-[35vw] rounded-lg`
        />
        <!-- <div class="mr-32">
            <img
                src="card-01-1.png"
                alt=""
                class=`absolute z-20 ${secondImageMargin} rounded-3xl border-white border-8 border-solid h-[48vh] w-[20vw]`
            />
        </div> -->
    </div>
</div>
